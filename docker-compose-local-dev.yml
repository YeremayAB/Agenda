services:
  frontend:
    container_name: frontend
    image: node:20.11.1
    working_dir: /usr/src/app
    volumes:
      - ./frontend:/usr/src/app
    ports:
      - "5173:5173"
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: sh -c "npm i && npm run dev -- --host"

  backend:
    container_name: backend
    build: ./backend
    working_dir: /home/site/wwwroot
    command: python manage.py runserver 0.0.0.0:8000
    ports: 
      - "3000:8000"
    env_file: ./backend/.env
    volumes:
      - ./backend:/home/site/wwwroot
    depends_on:      
      database:
        condition: service_healthy

  database:
    container_name: database
    image: postgres:15.3-alpine3.18
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:7.4
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    depends_on:
      database:
        condition: service_healthy
