"""
Django settings for tellMe project.
 
Generated by 'django-admin startproject' using Django 3.2.9.
 
For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/
 
For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
 
from pathlib import Path
import os
from environ import Env
 
 
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
 
# Ruta de variables de entorno
env = Env()
if not os.environ.get('DJANGO_SKIP_DOT_ENV_FILE', False):
    env.read_env(os.path.join(BASE_DIR, '.env'))
 
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/
 
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env.str("DJANGO_SECRET_KEY")
 
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool("DJANGO_DEBUG")
 
ALLOWED_HOSTS =["localhost"]
 
 
# Application definition
 
DJANGO_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.postgres',
    'django.contrib.staticfiles',
    'django.contrib.sites'
]
 
LOCAL_APPS = [
    # 'applications.phonebook',
    # 'applications.tickets',
    # 'applications.reports',
    # 'applications.phonebook.templatetags.is_admin',
    # 'applications.tickets.templatetags.custom_filters',
    # 'applications.tickets.templatetags.view_grafana'
]
 
THIRD_PARTY_APPS = [
    # 'django_filters',
    # "phonenumber_field",
    # "allauth_ui",
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.microsoft',
    
    'bs4',
    # "widget_tweaks",
]
 
INSTALLED_APPS = DJANGO_APPS + LOCAL_APPS + THIRD_PARTY_APPS
 
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "allauth.account.middleware.AccountMiddleware",
]

 
TEMPLATES = [
   {
       'BACKEND': 'django.template.backends.django.DjangoTemplates',
       'DIRS': [BASE_DIR / "templates"],
       'APP_DIRS': True,
       'OPTIONS': {
           'context_processors': [
               'django.template.context_processors.debug',
               'django.template.context_processors.request',
               'django.contrib.auth.context_processors.auth',
               'django.contrib.messages.context_processors.messages',
 
           ],
       },
   },
]
 
 

 
 
# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases
 
DATABASES = {
   # 'default': env.db_url("DJANGO_DB"),
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'postgres',
        'USER': 'postgres',
        'PASSWORD': 'postgres',
        'HOST': 'database',
        'PORT': 5432
    }
}
 
 
# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators
 
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
 
 
# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/
 
 
LANGUAGE_CODE = 'es-ES'
 
TIME_ZONE = 'Atlantic/Canary'
 
USE_I18N = True
 
USE_L10N = True
 
USE_TZ = True
 
 
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/
 
STATIC_URL = 'static/'
STATICFILES_DIRS = [
    BASE_DIR / "static",
]
 
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'
 
INTERNAL_IPS = ['127.0.0.1', '::1', '0.0.0.0']
 
# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field
 
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
 
# Modelo de usuario propio
AUTH_USER_MODEL = 'auth.User'
 
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]
 
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        },
        'OAUTH_PKCE_ENABLED': True,
    }
}
 
SITE_ID = 6
LOGIN_REDIRECT_URL = '/'
 
# Additional configuration settings
SOCIALACCOUNT_QUERY_EMAIL = True
ACCOUNT_LOGOUT_ON_GET= True
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_AUTHENTICATION_METHOD = 'email'
 
OUTLOOK_HOST = 'outlook.office365.com'
OUTLOOK_HOST_EMAIL = env.str("OUTLOOK_HOST_EMAIL")
OUTLOOK_CLIENT_ID = env.str("MICROSOFT_CLIENT_ID")
OUTLOOK_CLIENT_SECRET = env("MICROSOFT_CLIENT_SECRET")
OUTLOOK_SCOPE = ["https://graph.microsoft.com/.default"]
OUTLOOK_TENANT_ID = env.str("MICROSOFT_TENANT_ID")
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_HOST_PASSWORD = env.str("EMAIL_HOST_PASSWORD")
EMAIL_USE_TLS = True
 